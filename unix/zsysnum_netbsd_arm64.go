// go run mksysnum.go http://cvsweb.netbsd.org/bsdweb.cgi/~checkout~/src/sys/kern/syscalls.master
// Code generated by the command above; DO NOT EDIT.

// +build arm64,netbsd

package unix

// { void|sys||exit(int rval); }
// { int|sys||fork(void); }
// { ssize_t|sys||read(int fd, void *buf, size_t nbyte); }
// { ssize_t|sys||write(int fd, const void *buf, size_t nbyte); }
// { int|sys||open(const char *path, int flags, ... mode_t mode); }
// { int|sys||close(int fd); }
// { int|sys||link(const char *path, const char *link); }
// { int|sys||unlink(const char *path); }
// { int|sys||chdir(const char *path); }
// { int|sys||fchdir(int fd); }
// { int|sys||chmod(const char *path, mode_t mode); }
// { int|sys||chown(const char *path, uid_t uid, gid_t gid); }
// { int|sys||obreak(char *nsize); }
// { pid_t|sys||getpid_with_ppid(void); }
// { int|sys||unmount(const char *path, int flags); }
// { int|sys||setuid(uid_t uid); }
// { uid_t|sys||getuid_with_euid(void); }
// { uid_t|sys||geteuid(void); }
// { int|sys||ptrace(int req, pid_t pid, void *addr, int data); }
// { ssize_t|sys||recvmsg(int s, struct msghdr *msg, int flags); }
// { ssize_t|sys||sendmsg(int s, const struct msghdr *msg, int flags); }
// { ssize_t|sys||recvfrom(int s, void *buf, size_t len, int flags, struct sockaddr *from, socklen_t *fromlenaddr); }
// { int|sys||accept(int s, struct sockaddr *name, socklen_t *anamelen); }
// { int|sys||getpeername(int fdes, struct sockaddr *asa, socklen_t *alen); }
// { int|sys||getsockname(int fdes, struct sockaddr *asa, socklen_t *alen); }
// { int|sys||access(const char *path, int flags); }
// { int|sys||chflags(const char *path, u_long flags); }
// { int|sys||fchflags(int fd, u_long flags); }
// { void|sys||sync(void); }
// { int|sys||kill(pid_t pid, int signum); }
// { pid_t|sys||getppid(void); }
// { int|sys||dup(int fd); }
// { int|sys||pipe(void); }
// { gid_t|sys||getegid(void); }
// { int|sys||profil(char *samples, size_t size, u_long offset, u_int scale); }
// { int|sys||ktrace(const char *fname, int ops, int facs, pid_t pid); }
// { gid_t|sys||getgid_with_egid(void); }
// { int|sys||__getlogin(char *namebuf, size_t namelen); }
// { int|sys||__setlogin(const char *namebuf); }
// { int|sys||acct(const char *path); }
// { int|sys||ioctl(int fd, u_long com, ... void *data); }
// { int|sys||revoke(const char *path); }
// { int|sys||symlink(const char *path, const char *link); }
// { ssize_t|sys||readlink(const char *path, char *buf, size_t count); }
// { int|sys||execve(const char *path, char * const *argp, char * const *envp); }
// { mode_t|sys||umask(mode_t newmask); }
// { int|sys||chroot(const char *path); }
// { int|sys||vfork(void); }
// { int|sys||sbrk(intptr_t incr); }
// { int|sys||sstk(int incr); }
// { int|sys||ovadvise(int anom); }
// { int|sys||munmap(void *addr, size_t len); }
// { int|sys||mprotect(void *addr, size_t len, int prot); }
// { int|sys||madvise(void *addr, size_t len, int behav); }
// { int|sys||mincore(void *addr, size_t len, char *vec); }
// { int|sys||getgroups(int gidsetsize, gid_t *gidset); }
// { int|sys||setgroups(int gidsetsize, const gid_t *gidset); }
// { int|sys||getpgrp(void); }
// { int|sys||setpgid(pid_t pid, pid_t pgid); }
// { int|sys||dup2(int from, int to); }
// { int|sys||fcntl(int fd, int cmd, ... void *arg); }
// { int|sys||fsync(int fd); }
// { int|sys||setpriority(int which, id_t who, int prio); }
// { int|sys||connect(int s, const struct sockaddr *name, socklen_t namelen); }
// { int|sys||getpriority(int which, id_t who); }
// { int|sys||bind(int s, const struct sockaddr *name, socklen_t namelen); }
// { int|sys||setsockopt(int s, int level, int name, const void *val, socklen_t valsize); }
// { int|sys||listen(int s, int backlog); }
// { int|sys||getsockopt(int s, int level, int name, void *val, socklen_t *avalsize); }
// { ssize_t|sys||readv(int fd, const struct iovec *iovp, int iovcnt); }
// { ssize_t|sys||writev(int fd, const struct iovec *iovp, int iovcnt); }
// { int|sys||fchown(int fd, uid_t uid, gid_t gid); }
// { int|sys||fchmod(int fd, mode_t mode); }
// { int|sys||setreuid(uid_t ruid, uid_t euid); }
// { int|sys||setregid(gid_t rgid, gid_t egid); }
// { int|sys||rename(const char *from, const char *to); }
// { int|sys||flock(int fd, int how); }
// { int|sys||mkfifo(const char *path, mode_t mode); }
// { ssize_t|sys||sendto(int s, const void *buf, size_t len, int flags, const struct sockaddr *to, socklen_t tolen); }
// { int|sys||shutdown(int s, int how); }
// { int|sys||socketpair(int domain, int type, int protocol, int *rsv); }
// { int|sys||mkdir(const char *path, mode_t mode); }
// { int|sys||rmdir(const char *path); }
// { int|sys||setsid(void); }
// { int|sys||sysarch(int op, void *parms); }
// { ssize_t|sys||pread(int fd, void *buf, size_t nbyte, int PAD, off_t offset); }
// { ssize_t|sys||pwrite(int fd, const void *buf, size_t nbyte, int PAD, off_t offset); }
// { int|sys||ntp_adjtime(struct timex *tp); }
// { int|sys||setgid(gid_t gid); }
// { int|sys||setegid(gid_t egid); }
// { int|sys||seteuid(uid_t euid); }
// { long|sys||pathconf(const char *path, int name); }
// { long|sys||fpathconf(int fd, int name); }
// { int|sys||getrlimit(int which, struct rlimit *rlp); }
// { int|sys||setrlimit(int which, const struct rlimit *rlp); }
// { void *|sys||mmap(void *addr, size_t len, int prot, int flags, int fd, long PAD, off_t pos); }
// { off_t|sys||lseek(int fd, int PAD, off_t offset, int whence); }
// { int|sys||truncate(const char *path, int PAD, off_t length); }
// { int|sys||ftruncate(int fd, int PAD, off_t length); }
// { int|sys||__sysctl(const int *name, u_int namelen, void *old, size_t *oldlenp, const void *new, size_t newlen); }
// { int|sys||mlock(const void *addr, size_t len); }
// { int|sys||munlock(const void *addr, size_t len); }
// { int|sys||undelete(const char *path); }
// { pid_t|sys||getpgid(pid_t pid); }
// { int|sys||reboot(int opt, char *bootstr); }
// { int|sys||poll(struct pollfd *fds, u_int nfds, int timeout); }
// { int|sys||semget(key_t key, int nsems, int semflg); }
// { int|sys||semop(int semid, struct sembuf *sops, size_t nsops); }
// { int|sys||semconfig(int flag); }
// { int|sys||msgget(key_t key, int msgflg); }
// { int|sys||msgsnd(int msqid, const void *msgp, size_t msgsz, int msgflg); }
// { ssize_t|sys||msgrcv(int msqid, void *msgp, size_t msgsz, long msgtyp, int msgflg); }
// { void *|sys||shmat(int shmid, const void *shmaddr, int shmflg); }
// { int|sys||shmdt(const void *shmaddr); }
// { int|sys||shmget(key_t key, size_t size, int shmflg); }
// { int|sys||timer_create(clockid_t clock_id, struct sigevent *evp, timer_t *timerid); }
// { int|sys||timer_delete(timer_t timerid); }
// { int|sys||timer_getoverrun(timer_t timerid); }
// { int|sys||fdatasync(int fd); }
// { int|sys||mlockall(int flags); }
// { int|sys||munlockall(void); }
// { int|sys||sigqueueinfo(pid_t pid, const siginfo_t *info); }
// { int|sys||modctl(int cmd, void *arg); }
// { int|sys||__posix_rename(const char *from, const char *to); }
// { int|sys||swapctl(int cmd, void *arg, int misc); }
// { int|sys||minherit(void *addr, size_t len, int inherit); }
// { int|sys||lchmod(const char *path, mode_t mode); }
// { int|sys||lchown(const char *path, uid_t uid, gid_t gid); }
// { int|sys|13|msync(void *addr, size_t len, int flags); }
// { int|sys||__posix_chown(const char *path, uid_t uid, gid_t gid); }
// { int|sys||__posix_fchown(int fd, uid_t uid, gid_t gid); }
// { int|sys||__posix_lchown(const char *path, uid_t uid, gid_t gid); }
// { pid_t|sys||getsid(pid_t pid); }
// { pid_t|sys||__clone(int flags, void *stack); }
// { int|sys||fktrace(int fd, int ops, int facs, pid_t pid); }
// { ssize_t|sys||preadv(int fd, const struct iovec *iovp, int iovcnt, int PAD, off_t offset); }
// { ssize_t|sys||pwritev(int fd, const struct iovec *iovp, int iovcnt, int PAD, off_t offset); }
// { int|sys||__getcwd(char *bufp, size_t length); }
// { int|sys||fchroot(int fd); }
// { int|sys||lchflags(const char *path, u_long flags); }
// { int|sys||issetugid(void); }
// { int|sys||utrace(const char *label, void *addr, size_t len); }
// { int|sys||getcontext(struct __ucontext *ucp); }
// { int|sys||setcontext(const struct __ucontext *ucp); }
// { int|sys||_lwp_create(const struct __ucontext *ucp, u_long flags, lwpid_t *new_lwp); }
// { int|sys||_lwp_exit(void); }
// { lwpid_t|sys||_lwp_self(void); }
// { int|sys||_lwp_wait(lwpid_t wait_for, lwpid_t *departed); }
// { int|sys||_lwp_suspend(lwpid_t target); }
// { int|sys||_lwp_continue(lwpid_t target); }
// { int|sys||_lwp_wakeup(lwpid_t target); }
// { void *|sys||_lwp_getprivate(void); }
// { void|sys||_lwp_setprivate(void *ptr); }
// { int|sys||_lwp_kill(lwpid_t target, int signo); }
// { int|sys||_lwp_detach(lwpid_t target); }
// { int|sys||_lwp_unpark(lwpid_t target, const void *hint); }
// { ssize_t|sys||_lwp_unpark_all(const lwpid_t *targets, size_t ntargets, const void *hint); }
// { int|sys||_lwp_setname(lwpid_t target, const char *name); }
// { int|sys||_lwp_getname(lwpid_t target, char *name, size_t len); }
// { int|sys||_lwp_ctl(int features, struct lwpctl **address); }
// { int|sys||__sigaction_sigtramp(int signum, const struct sigaction *nsa, struct sigaction *osa, const void *tramp, int vers); }
// { int|sys||pmc_get_info(int ctr, int op, void *args); }
// { int|sys||pmc_control(int ctr, int op, void *args); }
// { int|sys||rasctl(void *addr, size_t len, int op); }
// { int|sys||kqueue(void); }
// { int|sys||_sched_setparam(pid_t pid, lwpid_t lid, int policy, const struct sched_param *params); }
// { int|sys||_sched_getparam(pid_t pid, lwpid_t lid, int *policy, struct sched_param *params); }
// { int|sys||_sched_setaffinity(pid_t pid, lwpid_t lid, size_t size, const cpuset_t *cpuset); }
// { int|sys||_sched_getaffinity(pid_t pid, lwpid_t lid, size_t size, cpuset_t *cpuset); }
// { int|sys||sched_yield(void); }
// { int|sys||fsync_range(int fd, int flags, off_t start, off_t length); }
// { int|sys||uuidgen(struct uuid *store, int count); }
// { int|sys||getvfsstat(struct statvfs *buf, size_t bufsize, int flags); }
// { int|sys||statvfs1(const char *path, struct statvfs *buf, int flags); }
// { int|sys||fstatvfs1(int fd, struct statvfs *buf, int flags); }
// { int|sys||extattrctl(const char *path, int cmd, const char *filename, int attrnamespace, const char *attrname); }
// { int|sys||extattr_set_file(const char *path, int attrnamespace, const char *attrname, const void *data, size_t nbytes); }
// { ssize_t|sys||extattr_get_file(const char *path, int attrnamespace, const char *attrname, void *data, size_t nbytes); }
// { int|sys||extattr_delete_file(const char *path, int attrnamespace, const char *attrname); }
// { int|sys||extattr_set_fd(int fd, int attrnamespace, const char *attrname, const void *data, size_t nbytes); }
// { ssize_t|sys||extattr_get_fd(int fd, int attrnamespace, const char *attrname, void *data, size_t nbytes); }
// { int|sys||extattr_delete_fd(int fd, int attrnamespace, const char *attrname); }
// { int|sys||extattr_set_link(const char *path, int attrnamespace, const char *attrname, const void *data, size_t nbytes); }
// { ssize_t|sys||extattr_get_link(const char *path, int attrnamespace, const char *attrname, void *data, size_t nbytes); }
// { int|sys||extattr_delete_link(const char *path, int attrnamespace, const char *attrname); }
// { ssize_t|sys||extattr_list_fd(int fd, int attrnamespace, void *data, size_t nbytes); }
// { ssize_t|sys||extattr_list_file(const char *path, int attrnamespace, void *data, size_t nbytes); }
// { ssize_t|sys||extattr_list_link(const char *path, int attrnamespace, void *data, size_t nbytes); }
// { int|sys||setxattr(const char *path, const char *name, const void *value, size_t size, int flags); }
// { int|sys||lsetxattr(const char *path, const char *name, const void *value, size_t size, int flags); }
// { int|sys||fsetxattr(int fd, const char *name, const void *value, size_t size, int flags); }
// { int|sys||getxattr(const char *path, const char *name, void *value, size_t size); }
// { int|sys||lgetxattr(const char *path, const char *name, void *value, size_t size); }
// { int|sys||fgetxattr(int fd, const char *name, void *value, size_t size); }
// { int|sys||listxattr(const char *path, char *list, size_t size); }
// { int|sys||llistxattr(const char *path, char *list, size_t size); }
// { int|sys||flistxattr(int fd, char *list, size_t size); }
// { int|sys||removexattr(const char *path, const char *name); }
// { int|sys||lremovexattr(const char *path, const char *name); }
// { int|sys||fremovexattr(int fd, const char *name); }
// { int|sys|30|getdents(int fd, char *buf, size_t count); }
// { int|sys|30|socket(int domain, int type, int protocol); }
// { int|sys|30|getfh(const char *fname, void *fhp, size_t *fh_size); }
// { int|sys|50|mount(const char *type, const char *path, int flags, void *data, size_t data_len); }
// { void *|sys||mremap(void *old_address, size_t old_size, void *new_address, size_t new_size, int flags); }
// { int|sys||pset_create(psetid_t *psid); }
// { int|sys||pset_destroy(psetid_t psid); }
// { int|sys||pset_assign(psetid_t psid, cpuid_t cpuid, psetid_t *opsid); }
// { int|sys||_pset_bind(idtype_t idtype, id_t first_id, id_t second_id, psetid_t psid, psetid_t *opsid); }
// { int|sys|50|posix_fadvise(int fd, int PAD, off_t offset, off_t len, int advice); }
// { int|sys|50|select(int nd, fd_set *in, fd_set *ou, fd_set *ex, struct timeval *tv); }
// { int|sys|50|gettimeofday(struct timeval *tp, void *tzp); }
// { int|sys|50|settimeofday(const struct timeval *tv, const void *tzp); }
// { int|sys|50|utimes(const char *path, const struct timeval *tptr); }
// { int|sys|50|adjtime(const struct timeval *delta, struct timeval *olddelta); }
// { int|sys|50|futimes(int fd, const struct timeval *tptr); }
// { int|sys|50|lutimes(const char *path, const struct timeval *tptr); }
// { int|sys|50|setitimer(int which, const struct itimerval *itv, struct itimerval *oitv); }
// { int|sys|50|getitimer(int which, struct itimerval *itv); }
// { int|sys|50|clock_gettime(clockid_t clock_id, struct timespec *tp); }
// { int|sys|50|clock_settime(clockid_t clock_id, const struct timespec *tp); }
// { int|sys|50|clock_getres(clockid_t clock_id, struct timespec *tp); }
// { int|sys|50|nanosleep(const struct timespec *rqtp, struct timespec *rmtp); }
// { int|sys|50|__sigtimedwait(const sigset_t *set, siginfo_t *info, struct timespec *timeout); }
// { int|sys|50|_lwp_park(const struct timespec *ts, lwpid_t unpark, const void *hint, const void *unparkhint); }
// { int|sys|50|kevent(int fd, const struct kevent *changelist, size_t nchanges, struct kevent *eventlist, size_t nevents, const struct timespec *timeout); }
// { int|sys|50|pselect(int nd, fd_set *in, fd_set *ou, fd_set *ex, const struct timespec *ts, const sigset_t *mask); }
// { int|sys|50|pollts(struct pollfd *fds, u_int nfds, const struct timespec *ts, const sigset_t *mask); }
// { int|sys|50|stat(const char *path, struct stat *ub); }
// { int|sys|50|fstat(int fd, struct stat *sb); }
// { int|sys|50|lstat(const char *path, struct stat *ub); }
// { int|sys|50|__semctl(int semid, int semnum, int cmd, ... union __semun *arg); }
// { int|sys|50|shmctl(int shmid, int cmd, struct shmid_ds *buf); }
// { int|sys|50|msgctl(int msqid, int cmd, struct msqid_ds *buf); }
// { int|sys|50|getrusage(int who, struct rusage *rusage); }
// { int|sys|50|timer_settime(timer_t timerid, int flags, const struct itimerspec *value, struct itimerspec *ovalue); }
// { int|sys|50|timer_gettime(timer_t timerid, struct itimerspec *value); }
// { int|sys|50|ntp_gettime(struct ntptimeval *ntvp); }
// { int|sys|50|wait4(pid_t pid, int *status, int options, struct rusage *rusage); }
// { int|sys|50|mknod(const char *path, mode_t mode, dev_t dev); }
// { int|sys|50|fhstat(const void *fhp, size_t fh_size, struct stat *sb); }
// { int|sys||pipe2(int *fildes, int flags); }
// { int|sys||dup3(int from, int to, int flags); }
// { int|sys||kqueue1(int flags); }
// { int|sys||paccept(int s, struct sockaddr *name, socklen_t *anamelen, const sigset_t *mask, int flags); }
// { int|sys||linkat(int fd1, const char *name1, int fd2, const char *name2, int flags); }
// { int|sys||renameat(int fromfd, const char *from, int tofd, const char *to); }
// { int|sys||mkfifoat(int fd, const char *path, mode_t mode); }
// { int|sys||mknodat(int fd, const char *path, mode_t mode, uint32_t dev); }
// { int|sys||mkdirat(int fd, const char *path, mode_t mode); }
// { int|sys||faccessat(int fd, const char *path, int amode, int flag); }
// { int|sys||fchmodat(int fd, const char *path, mode_t mode, int flag); }
// { int|sys||fchownat(int fd, const char *path, uid_t owner, gid_t group, int flag); }
// { int|sys||fexecve(int fd, char * const *argp, char * const *envp); }
// { int|sys||fstatat(int fd, const char *path, struct stat *buf, int flag); }
// { int|sys||utimensat(int fd, const char *path, const struct timespec *tptr, int flag); }
// { int|sys||openat(int fd, const char *path, int oflags, ... mode_t mode); }
// { int|sys||readlinkat(int fd, const char *path, char *buf, size_t bufsize); }
// { int|sys||symlinkat(const char *path1, int fd, const char *path2); }
// { int|sys||unlinkat(int fd, const char *path, int flag); }
// { int|sys||futimens(int fd, const struct timespec *tptr); }
// { int|sys||__quotactl(const char *path, struct quotactl_args *args); }
// { int|sys||posix_spawn(pid_t *pid, const char *path, const struct posix_spawn_file_actions *file_actions, const struct posix_spawnattr *attrp, char *const *argv, char *const *envp); }
// { int|sys||recvmmsg(int s, struct mmsghdr *mmsg, unsigned int vlen, unsigned int flags, struct timespec *timeout); }
// { int|sys||sendmmsg(int s, struct mmsghdr *mmsg, unsigned int vlen, unsigned int flags); }
