// mkerrors.sh -m64
// Code generated by the command above; see README.md. DO NOT EDIT.

// +build arm64,openbsd

// Code generated by cmd/cgo -godefs; DO NOT EDIT.
// cgo -godefs -- -m64 _const.go

package unix

import "syscall"

const (
	ALTWERASE = 0x200

	BPF_FILDROP_CAPTURE = 0x1
	BPF_FILDROP_DROP    = 0x2
	BPF_FILDROP_PASS    = 0x0

	CLOCK_BOOTTIME           = 0x6
	CLOCK_MONOTONIC          = 0x3
	CLOCK_PROCESS_CPUTIME_ID = 0x2
	CLOCK_REALTIME           = 0x0
	CLOCK_THREAD_CPUTIME_ID  = 0x4
	CLOCK_UPTIME             = 0x5

	DLT_OPENFLOW = 0x10b

	DLT_USBPCAP = 0xf9
	DLT_USER0   = 0x93
	DLT_USER1   = 0x94
	DLT_USER10  = 0x9d
	DLT_USER11  = 0x9e
	DLT_USER12  = 0x9f
	DLT_USER13  = 0xa0
	DLT_USER14  = 0xa1
	DLT_USER15  = 0xa2
	DLT_USER2   = 0x95
	DLT_USER3   = 0x96
	DLT_USER4   = 0x97
	DLT_USER5   = 0x98
	DLT_USER6   = 0x99
	DLT_USER7   = 0x9a
	DLT_USER8   = 0x9b
	DLT_USER9   = 0x9c

	ETHERTYPE_PBB = 0x88e7

	ETHER_MAX_HARDMTU_LEN = 0xff9b

	EVFILT_DEVICE = -0x8

	EVL_ENCAPLEN  = 0x4
	EVL_PRIO_BITS = 0xd
	EVL_PRIO_MAX  = 0x7
	EVL_VLID_MASK = 0xfff
	EVL_VLID_MAX  = 0xffe
	EVL_VLID_MIN  = 0x1
	EVL_VLID_NULL = 0x0

	EV_DISPATCH = 0x80

	EV_RECEIPT = 0x40

	F_ISATTY = 0xb
	F_OK     = 0x0

	IFF_STATICARP = 0x20

	IFT_MBIM = 0xfa

	IPV6_MINHOPCOUNT = 0x41

	IP_IPDEFTTL = 0x25

	IP_SENDSRCADDR = 0x7

	IUCLC = 0x1000

	MAP_ANONYMOUS = 0x1000
	MAP_CONCEAL   = 0x8000

	MAP_INHERIT_ZERO = 0x3

	MAP_STACK = 0x4000

	MNT_NOPERM = 0x20

	MNT_STALLED   = 0x100000
	MNT_SWAPPABLE = 0x200000

	MSG_CMSG_CLOEXEC = 0x800

	NET_RT_IFNAMES = 0x6

	NOKERNINFO = 0x2000000

	NOTE_CHANGE = 0x1

	OLCUC = 0x20

	OXTABS = 0x4

	RLIMIT_MEMLOCK = 0x6

	RLIMIT_NPROC = 0x7
	RLIMIT_RSS   = 0x5

	RTAX_BFD = 0xb

	RTAX_DNS = 0xc

	RTAX_SEARCH = 0xe

	RTAX_STATIC = 0xd

	RTA_BFD = 0x800

	RTA_DNS = 0x1000

	RTA_SEARCH = 0x4000

	RTA_STATIC = 0x2000

	RTF_BFD = 0x1000000

	RTF_BROADCAST = 0x400000
	RTF_CACHED    = 0x20000

	RTF_CONNECTED = 0x800000

	RTF_LOCAL = 0x200000

	RTF_MULTICAST = 0x200

	RTM_80211INFO = 0x15

	RTM_BFD = 0x12

	RTM_CHGADDRATTR = 0x14

	RTM_INVALIDATE = 0x11

	RTM_PROPOSAL = 0x13

	RT_TABLEID_BITS = 0x8
	RT_TABLEID_MASK = 0xff

	SIOCBRDGADDL = 0x80606949

	SIOCBRDGSIFPROT = 0x8060694a

	SIOCDELLABEL = 0x80206997

	SIOCDIFPARENT = 0x802069b4

	SIOCDPWE3NEIGHBOR = 0x802069de
	SIOCDVNETID       = 0x802069af

	SIOCGETMPWCFG = 0xc02069ae

	SIOCGIFGLIST = 0xc028698d

	SIOCGIFLLPRIO = 0xc02069b6

	SIOCGIFPAIR   = 0xc02069b1
	SIOCGIFPARENT = 0xc02069b3

	SIOCGIFRXR     = 0x802069aa
	SIOCGIFSFFPAGE = 0xc1126939

	SIOCGLIFPHYDF  = 0xc02069c2
	SIOCGLIFPHYECN = 0xc02069c8

	SIOCGPWE3         = 0xc0206998
	SIOCGPWE3CTRLWORD = 0xc02069dc
	SIOCGPWE3FAT      = 0xc02069dd
	SIOCGPWE3NEIGHBOR = 0xc21869de

	SIOCGTXHPRIO  = 0xc02069c6
	SIOCGUMBINFO  = 0xc02069be
	SIOCGUMBPARAM = 0xc02069c0

	SIOCGVNETFLOWID = 0xc02069c4

	SIOCIFAFATTACH = 0x801169ab
	SIOCIFAFDETACH = 0x801169ac

	SIOCSETMPWCFG = 0x802069ad

	SIOCSIFLLPRIO = 0x802069b5

	SIOCSIFPAIR   = 0x802069b0
	SIOCSIFPARENT = 0x802069b2

	SIOCSLIFPHYDF  = 0x802069c1
	SIOCSLIFPHYECN = 0x802069c7

	SIOCSPWE3CTRLWORD = 0x802069dc
	SIOCSPWE3FAT      = 0x802069dd
	SIOCSPWE3NEIGHBOR = 0x821869de

	SIOCSTXHPRIO  = 0x802069c5
	SIOCSUMBPARAM = 0x802069bf

	SIOCSVNETFLOWID = 0x802069c3

	SIOCSWGDPID     = 0xc018695b
	SIOCSWGMAXFLOW  = 0xc0186960
	SIOCSWGMAXGROUP = 0xc018695d
	SIOCSWSDPID     = 0x8018695c
	SIOCSWSPORTNO   = 0xc060695f
	SOCK_CLOEXEC    = 0x8000

	SOCK_DNS      = 0x1000
	SOCK_NONBLOCK = 0x4000

	SO_ZEROIZE = 0x2000

	TCIOFF = 0x3

	TCION = 0x4

	TCOOFF = 0x1
	TCOON  = 0x2

	TIMER_ABSTIME = 0x1
	TIMER_RELTIME = 0x0

	TIOCCHKVERAUTH = 0x2000741e
	TIOCCLRVERAUTH = 0x2000741d

	TIOCSETVERAUTH = 0x8004741c

	TIOCUCNTL_CBRK = 0x7a
	TIOCUCNTL_SBRK = 0x7b

	UTIME_NOW  = -0x2
	UTIME_OMIT = -0x1

	VM_ANONMIN     = 0x7
	VM_LOADAVG     = 0x2
	VM_MALLOC_CONF = 0xc
	VM_MAXID       = 0xd
	VM_MAXSLP      = 0xa
	VM_METER       = 0x1
	VM_NKMEMPAGES  = 0x6
	VM_PSSTRINGS   = 0x3
	VM_SWAPENCRYPT = 0x5
	VM_USPACE      = 0xb
	VM_UVMEXP      = 0x4
	VM_VNODEMIN    = 0x9
	VM_VTEXTMIN    = 0x8

	XCASE = 0x1000000
)

// Errors
const (
	EBADMSG = syscall.Errno(0x5c)

	ENOTRECOVERABLE = syscall.Errno(0x5d)

	EOWNERDEAD = syscall.Errno(0x5e)

	EPROTO = syscall.Errno(0x5f)
)

// Signals

// Error table
var errorList = [...]struct {
	num  syscall.Errno
	name string
	desc string
}{
	{1, "EPERM", "operation not permitted"},
	{2, "ENOENT", "no such file or directory"},
	{3, "ESRCH", "no such process"},
	{4, "EINTR", "interrupted system call"},
	{5, "EIO", "input/output error"},
	{6, "ENXIO", "device not configured"},
	{7, "E2BIG", "argument list too long"},
	{8, "ENOEXEC", "exec format error"},
	{9, "EBADF", "bad file descriptor"},
	{10, "ECHILD", "no child processes"},
	{11, "EDEADLK", "resource deadlock avoided"},
	{12, "ENOMEM", "cannot allocate memory"},
	{13, "EACCES", "permission denied"},
	{14, "EFAULT", "bad address"},
	{15, "ENOTBLK", "block device required"},
	{16, "EBUSY", "device busy"},
	{17, "EEXIST", "file exists"},
	{18, "EXDEV", "cross-device link"},
	{19, "ENODEV", "operation not supported by device"},
	{20, "ENOTDIR", "not a directory"},
	{21, "EISDIR", "is a directory"},
	{22, "EINVAL", "invalid argument"},
	{23, "ENFILE", "too many open files in system"},
	{24, "EMFILE", "too many open files"},
	{25, "ENOTTY", "inappropriate ioctl for device"},
	{26, "ETXTBSY", "text file busy"},
	{27, "EFBIG", "file too large"},
	{28, "ENOSPC", "no space left on device"},
	{29, "ESPIPE", "illegal seek"},
	{30, "EROFS", "read-only file system"},
	{31, "EMLINK", "too many links"},
	{32, "EPIPE", "broken pipe"},
	{33, "EDOM", "numerical argument out of domain"},
	{34, "ERANGE", "result too large"},
	{35, "EAGAIN", "resource temporarily unavailable"},
	{36, "EINPROGRESS", "operation now in progress"},
	{37, "EALREADY", "operation already in progress"},
	{38, "ENOTSOCK", "socket operation on non-socket"},
	{39, "EDESTADDRREQ", "destination address required"},
	{40, "EMSGSIZE", "message too long"},
	{41, "EPROTOTYPE", "protocol wrong type for socket"},
	{42, "ENOPROTOOPT", "protocol not available"},
	{43, "EPROTONOSUPPORT", "protocol not supported"},
	{44, "ESOCKTNOSUPPORT", "socket type not supported"},
	{45, "EOPNOTSUPP", "operation not supported"},
	{46, "EPFNOSUPPORT", "protocol family not supported"},
	{47, "EAFNOSUPPORT", "address family not supported by protocol family"},
	{48, "EADDRINUSE", "address already in use"},
	{49, "EADDRNOTAVAIL", "can't assign requested address"},
	{50, "ENETDOWN", "network is down"},
	{51, "ENETUNREACH", "network is unreachable"},
	{52, "ENETRESET", "network dropped connection on reset"},
	{53, "ECONNABORTED", "software caused connection abort"},
	{54, "ECONNRESET", "connection reset by peer"},
	{55, "ENOBUFS", "no buffer space available"},
	{56, "EISCONN", "socket is already connected"},
	{57, "ENOTCONN", "socket is not connected"},
	{58, "ESHUTDOWN", "can't send after socket shutdown"},
	{59, "ETOOMANYREFS", "too many references: can't splice"},
	{60, "ETIMEDOUT", "operation timed out"},
	{61, "ECONNREFUSED", "connection refused"},
	{62, "ELOOP", "too many levels of symbolic links"},
	{63, "ENAMETOOLONG", "file name too long"},
	{64, "EHOSTDOWN", "host is down"},
	{65, "EHOSTUNREACH", "no route to host"},
	{66, "ENOTEMPTY", "directory not empty"},
	{67, "EPROCLIM", "too many processes"},
	{68, "EUSERS", "too many users"},
	{69, "EDQUOT", "disk quota exceeded"},
	{70, "ESTALE", "stale NFS file handle"},
	{71, "EREMOTE", "too many levels of remote in path"},
	{72, "EBADRPC", "RPC struct is bad"},
	{73, "ERPCMISMATCH", "RPC version wrong"},
	{74, "EPROGUNAVAIL", "RPC program not available"},
	{75, "EPROGMISMATCH", "program version wrong"},
	{76, "EPROCUNAVAIL", "bad procedure for program"},
	{77, "ENOLCK", "no locks available"},
	{78, "ENOSYS", "function not implemented"},
	{79, "EFTYPE", "inappropriate file type or format"},
	{80, "EAUTH", "authentication error"},
	{81, "ENEEDAUTH", "need authenticator"},
	{82, "EIPSEC", "IPsec processing failure"},
	{83, "ENOATTR", "attribute not found"},
	{84, "EILSEQ", "illegal byte sequence"},
	{85, "ENOMEDIUM", "no medium found"},
	{86, "EMEDIUMTYPE", "wrong medium type"},
	{87, "EOVERFLOW", "value too large to be stored in data type"},
	{88, "ECANCELED", "operation canceled"},
	{89, "EIDRM", "identifier removed"},
	{90, "ENOMSG", "no message of desired type"},
	{91, "ENOTSUP", "not supported"},
	{92, "EBADMSG", "bad message"},
	{93, "ENOTRECOVERABLE", "state not recoverable"},
	{94, "EOWNERDEAD", "previous owner died"},
	{95, "ELAST", "protocol error"},
}

// Signal table
var signalList = [...]struct {
	num  syscall.Signal
	name string
	desc string
}{
	{1, "SIGHUP", "hangup"},
	{2, "SIGINT", "interrupt"},
	{3, "SIGQUIT", "quit"},
	{4, "SIGILL", "illegal instruction"},
	{5, "SIGTRAP", "trace/BPT trap"},
	{6, "SIGABRT", "abort trap"},
	{7, "SIGEMT", "EMT trap"},
	{8, "SIGFPE", "floating point exception"},
	{9, "SIGKILL", "killed"},
	{10, "SIGBUS", "bus error"},
	{11, "SIGSEGV", "segmentation fault"},
	{12, "SIGSYS", "bad system call"},
	{13, "SIGPIPE", "broken pipe"},
	{14, "SIGALRM", "alarm clock"},
	{15, "SIGTERM", "terminated"},
	{16, "SIGURG", "urgent I/O condition"},
	{17, "SIGSTOP", "suspended (signal)"},
	{18, "SIGTSTP", "suspended"},
	{19, "SIGCONT", "continued"},
	{20, "SIGCHLD", "child exited"},
	{21, "SIGTTIN", "stopped (tty input)"},
	{22, "SIGTTOU", "stopped (tty output)"},
	{23, "SIGIO", "I/O possible"},
	{24, "SIGXCPU", "cputime limit exceeded"},
	{25, "SIGXFSZ", "filesize limit exceeded"},
	{26, "SIGVTALRM", "virtual timer expired"},
	{27, "SIGPROF", "profiling timer expired"},
	{28, "SIGWINCH", "window size changes"},
	{29, "SIGINFO", "information request"},
	{30, "SIGUSR1", "user defined signal 1"},
	{31, "SIGUSR2", "user defined signal 2"},
	{32, "SIGTHR", "thread AST"},
}
